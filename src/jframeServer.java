/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jami
 */
//package ServerPackage;

import java.io.IOException;
import java.io.Serializable;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class jframeServer extends javax.swing.JFrame {
    //public serverConfiguration serconfig= new serverConfiguration();
    public boolean  serverStarted=false;
    public int file_size;
    public  String file_Name;
    public  String root_directoryName;
    public String idRange2;
    public String [] fileNamesAry=new String[100];
       //ArrayList<String> l=new ArrayList<>();
    public  String []fileExtension=new String[100];
    public String []fromTO=new String[100];
    /**
     * Creates new form jframeServer
     */
    public jframeServer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        serverConnection = new javax.swing.JPanel();
        PortNo = new javax.swing.JLabel();
        connectionPort = new javax.swing.JTextField();
        serverStart = new javax.swing.JButton();
        serverStop = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        frameMessage = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        FileSize = new javax.swing.JLabel();
        filesize = new javax.swing.JTextField();
        IdRange = new javax.swing.JLabel();
        idRange = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rootDir = new javax.swing.JTextField();
        saveconfiguration = new javax.swing.JButton();
        fileExtlist = new javax.swing.JTextField();
        SetDirectory = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        allowedfilenames = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        PortNo.setText("PortNo");

        connectionPort.setText("666");

        serverStart.setText("Start Server");
        serverStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverStartActionPerformed(evt);
            }
        });

        serverStop.setText("Stop Server");
        serverStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverStopActionPerformed(evt);
            }
        });

        frameMessage.setColumns(20);
        frameMessage.setRows(5);
        jScrollPane2.setViewportView(frameMessage);

        javax.swing.GroupLayout serverConnectionLayout = new javax.swing.GroupLayout(serverConnection);
        serverConnection.setLayout(serverConnectionLayout);
        serverConnectionLayout.setHorizontalGroup(
            serverConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serverConnectionLayout.createSequentialGroup()
                .addGroup(serverConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(serverConnectionLayout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(PortNo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140)
                        .addComponent(connectionPort, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(serverConnectionLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(serverStart)
                        .addGap(153, 153, 153)
                        .addComponent(serverStop))
                    .addGroup(serverConnectionLayout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        serverConnectionLayout.setVerticalGroup(
            serverConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serverConnectionLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(serverConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PortNo)
                    .addComponent(connectionPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(serverConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverStart)
                    .addComponent(serverStop))
                .addGap(77, 77, 77))
        );

        jTabbedPane1.addTab("ServerConnection", serverConnection);

        FileSize.setText("File Size");

        filesize.setText("13568");

        IdRange.setText("IdRange");

        idRange.setText("10-19");

        jLabel4.setText("Root Dir");

        rootDir.setText("H:\\");

            saveconfiguration.setText("SaveConfig");
            saveconfiguration.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    saveconfigurationActionPerformed(evt);
                }
            });

            fileExtlist.setText("txt,jpg,c,cpp,ppt,pdf,");

            SetDirectory.setText("SetDirectory");
            SetDirectory.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    SetDirectoryActionPerformed(evt);
                }
            });

            jLabel2.setText("FileTypes");

            allowedfilenames.setText("a.txt,jami.l,");

            jLabel1.setText("FileNames");

            javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(IdRange)
                                .addComponent(FileSize)
                                .addComponent(jLabel4)
                                .addComponent(jLabel1))
                            .addGap(45, 45, 45)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(rootDir, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SetDirectory))
                                .addComponent(idRange, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(filesize, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(allowedfilenames, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fileExtlist, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))))
                        .addComponent(jLabel2))
                    .addGap(217, 217, 217))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(235, 235, 235)
                    .addComponent(saveconfiguration)
                    .addGap(0, 273, Short.MAX_VALUE))
            );
            jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(67, 67, 67)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(FileSize)
                                .addComponent(filesize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(IdRange)
                                .addComponent(idRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rootDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(SetDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(26, 26, 26)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(fileExtlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addGap(18, 18, 18)
                            .addComponent(allowedfilenames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                    .addComponent(saveconfiguration)
                    .addGap(29, 29, 29))
            );

            jTabbedPane1.addTab("ServerConfig", jPanel2);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane1)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane1)
            );

            setSize(new java.awt.Dimension(616, 438));
            setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents
    // boolean startServer=true;
    public ServerClass serverclass;
    private void serverStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverStartActionPerformed
        // TODO add your handling code here:
        System.out.println(Integer.parseInt(this.connectionPort.getText()));
        serverclass=new ServerClass(this,Integer.parseInt(this.connectionPort.getText()));
        Thread serverThread=new Thread(serverclass);
        serverThread.start();
        this.connectionPort.setText(null);
        this.serverStarted=true;
    }//GEN-LAST:event_serverStartActionPerformed
    private void serverStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverStopActionPerformed
        // TODO add your handling code here:
        //startServer=false;
        try {
            serverCloseConnection();
        } catch (IOException ex) {
            Logger.getLogger(jframeServer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_serverStopActionPerformed
    private void saveconfigurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveconfigurationActionPerformed
        // TODO add your handling code here:
       
        this.setAll(Integer.parseInt(this.filesize.getText())
                , this.rootDir.getText(),this.idRange.getText());
       // System.out.println("adding elements to Jlist \n");
       // this.fileTypeList.setModel(defaultModel);
        
        getidRange(this.idRange.getText(), fromTO);
        for(String ID:fromTO)
        {
            if(ID!=null)System.out.println("Sent: "+ID);
        }
        getidRange(this.fileExtlist.getText(),fileExtension);
        getidRange(this.allowedfilenames.getText(),fileNamesAry);
        
        
        
    }//GEN-LAST:event_saveconfigurationActionPerformed
    private  DefaultListModel defaultModel=new DefaultListModel();    
    public String filePathname=null;
    private void SetDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetDirectoryActionPerformed
        // TODO add your handling code here:
        if(this.serverStarted==true)
        {
            JFileChooser fileChooser=new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            fileChooser.showOpenDialog(this);
            //this.serverclass.myfile=fileChooser.getSelectedFile();
            filePathname = fileChooser.getSelectedFile().getAbsolutePath();
            rootDir.setText(filePathname);
            System.out.println("this is in server frame and path name is "
                    + "the "+filePathname+"\n");
        }
    }//GEN-LAST:event_SetDirectoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jframeServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jframeServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jframeServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jframeServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jframeServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FileSize;
    private javax.swing.JLabel IdRange;
    private javax.swing.JLabel PortNo;
    private javax.swing.JButton SetDirectory;
    public javax.swing.JTextField allowedfilenames;
    private javax.swing.JTextField connectionPort;
    private javax.swing.JTextField fileExtlist;
    private javax.swing.JTextField filesize;
    private javax.swing.JTextArea frameMessage;
    private javax.swing.JTextField idRange;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    public javax.swing.JTextField rootDir;
    private javax.swing.JButton saveconfiguration;
    private javax.swing.JPanel serverConnection;
    private javax.swing.JButton serverStart;
    private javax.swing.JButton serverStop;
    // End of variables declaration//GEN-END:variables
    
    public void SetFrameMessage(String s)
    {

        this.frameMessage.setText(s);
    }
    public String getFrameMessage()
    {
        return this.frameMessage.getText();
    }
    public void setAll(int fl,String roodir,String idRange)
    {
        this.file_size=fl;
        this.idRange2=idRange;
        this.root_directoryName=roodir;
    }
    public void getidRange(String str,String []fromTO)
    {
        //str=new String(ir);
        // fromTO = new String[100];
        if(str.indexOf(',')>=0)
        {
            int beginIndex=0;
            int endIndex=str.indexOf(',');
            int i=0;
            while(endIndex!=-1)
            {
                fromTO[i]=str.substring(beginIndex,endIndex);
                System.out.println(fromTO[i]+' ');
                beginIndex=endIndex+1;
                endIndex=str.indexOf(',', beginIndex);
                i++;
            }
       }
       else if(str.indexOf('-')>=0)
       {
           int beginIndex=0;
           int endIndex=str.indexOf('-');
           int from=Integer.parseInt(str.substring(beginIndex,endIndex));
           int to=Integer.parseInt(str.substring(endIndex+1));
           int k=0;
           for(int j=from;j<=to;j++)
               fromTO[k++]=String.valueOf(j);
           //System.out.println(fromTO[0]+' '+fromTO[j-1]);
       }
       else
       {
           //JOptionPane.showMessageDialog(null, "Invalid ID range");
           return;
       }
   }
    public void serverCloseConnection() throws IOException {
        serverclass.server.close();
    }


}
